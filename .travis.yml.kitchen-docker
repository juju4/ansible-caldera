---
dist: xenial
sudo: required
rvm:
  - 2.6

env:
#  - distribution: centos
#    version: 6
  - distribution: centos
    version: 7
    suite: default
  - distribution: ubuntu
    version: 18.04
    suite: default
  - distribution: ubuntu
    version: 16.04
    suite: default
#  - distribution: ubuntu
#    version: 14.04
#  - distribution: ubuntu
#    version: 12.04
#  - distribution: alpine
#    version: 3.4
#  - distribution: debian
#    version: stretch
  - distribution: centos
    version: 7
    suite: default-HEAD
  - distribution: ubuntu
    version: 18.04
    suite: default-HEAD

before_install:
  - env
  - pwd
  - find -ls
## use appropriate role path and not github name
  - "[ -f get-dependencies.sh ] && sh -x get-dependencies.sh"
  - sudo pip install ansible
  - 'echo "gem: --no-document" >> ~/.gemrc'
## need to use chef gem for some reason? BAD PATH https://github.com/chef/chef-dk/issues/15
#  - chef gem install kitchen
  - gem install kitchen
  - gem install kitchen-ansible
  - gem install kitchen-sync
  - gem install kitchen-docker
  - gem list
  - which kitchen
  - KITCHEN_YAML=.kitchen.docker.yml kitchen diagnose --all

script:
## avoid locale issue under xenial docker, https://github.com/pypa/pip/issues/3575
  - export LC_ALL=C.UTF-8
  - export LANG=C.UTF-8
  - KITCHEN_YAML=.kitchen.docker.yml kitchen verify ${suite}-${distribution}-${version//./}

after_script:
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /tmp/idempotency.test'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /etc/mongod.conf'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /etc/mongodb.conf'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /lib/systemd/system/caldera.service'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'cat /var/_caldera/caldera/conf/local.yml'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ls /usr/bin/'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ls /usr/local/bin/'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ls -la /var/_caldera/'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ls -la /var/_caldera/caldera/'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ls -la /var/_caldera/caldera/caldera/'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ls -la /var/_caldera/env-caldera/bin/'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c '/var/_caldera/env-caldera/bin/pip freeze'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'curl -vk http://localhost:8888'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'systemctl -l --no-pager status caldera'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'systemctl -l --no-pager status mongodb'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'systemctl -l --no-pager status mongod'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ps axuw'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'netstat -anp'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'ss -nlp'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'systemctl -l --no-pager status osqueryd'
  - KITCHEN_YAML=.kitchen.docker.yml kitchen exec ${suite}-${distribution}-${version//./} -c 'journalctl -xe --no-pager'

  # Clean up
  - KITCHEN_YAML=.kitchen.docker.yml kitchen destroy ${suite}-${distribution}-${version//./}

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
